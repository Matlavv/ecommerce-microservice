services:
    # user-service:
    #     container_name: user-service
    #     build:
    #         context: ./
    #         dockerfile: ./backend/user-service/Dockerfile.dev
    #     ports:
    #         - '3000:3000'
    #     environment:
    #         DATABASE_URL: 'postgres://postgres:postgres@user-service-db:5432/user_db'
    #     depends_on:
    #         - user-service-db
    #     volumes:
    #         - ./backend/user-service:/home/node/app

    # user-service-db:
    #     container_name: user-service-db
    #     image: postgres:latest
    #     ports:
    #         - '5431:5432'
    #     environment:
    #         POSTGRES_USER: ${POSTGRES_USER}
    #         POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    #         POSTGRES_DB: ${POSTGRES_DB_USER}
    #     volumes:
    #         - user-service-db-data:/var/lib/postgresql/data

    product-service:
        container_name: product-service
        build:
            context: ./
            dockerfile: ./backend/product-service/Dockerfile.dev
        ports:
            - '3004:3004'
        environment:
            DATABASE_URL: 'postgres://postgres:postgres@product-service-db:5432/product-service'
        volumes:
            - ./backend/product-service:/home/node/app
        depends_on:
            - product-service-db

    product-service-db:
        container_name: product-service-db
        image: postgres:latest
        ports:
            - '5434:5432'
        environment:
            POSTGRES_USER: ${POSTGRES_USER}
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
            POSTGRES_DB: ${POSTGRES_DB_PRODUCT}
        volumes:
            - product-service-db-data:/var/lib/postgresql/data

volumes:
    user-service-db-data:
    product-service-db-data:
